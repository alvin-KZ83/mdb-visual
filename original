let numLayers = 10;
let baseRadius;

let paramData;
let paramIndex = 0;
let emotion = 'emotion_sample'

function preload() {
  paramData = loadStrings(`${emotion}.txt`); // Load parameter file
}

function setup() {
  createCanvas(500, 500);
  noFill();
  baseRadius = height * 0.01;

  loadNextParams();
}

function draw() {
  background(20);
  translate(width / 2, height / 2);

  const numPoints = 360;

  for (let layer = 0; layer < numLayers; layer++) {
    let radius = baseRadius + layer * float(spacing);
    let noiseOffsetScale = layer * float(noiseScale);

    stroke(255);

    beginShape();
    for (let i = 0; i < numPoints; i++) {
      let angle = i * TWO_PI / numPoints;

      let layerNoiseOffset = layer * 0.1;
      let timeOffset = frameCount * float(timeFactor) + layerNoiseOffset;

      let noiseOffset = noise(
        cos(angle) * noiseOffsetScale + timeOffset,
        sin(angle) * noiseOffsetScale + timeOffset,
        timeOffset
      );

      let peakOffset = 1 + sin(angle * float(numPeaks));

      let r = radius + (float(noiseScale) * noiseOffset * 50 * peakOffset);

      let x = r * cos(angle);
      let y = r * sin(angle);

      vertex(x, y);
    }
    endShape(CLOSE);
  }
}

function mousePressed() {
  console.log(`Current Params: ${paramData[paramIndex]}`);
  saveGif(`${paramIndex}.gif`, 2);
  loadNextParams();
}

function loadNextParams() {
  if (paramIndex >= paramData.length) {
    console.log('All parameter sets have been used.');
    noLoop();
    return;
  }

  // Parse the current line into parameters
  const params = paramData[paramIndex].split('+').map(Number);
  [numPeaks, timeFactor, noiseScale, thickness, spacing] = params;

  numPeaks = 0.0
  spacing = 10.0

  strokeWeight(thickness);
  paramIndex++;
}